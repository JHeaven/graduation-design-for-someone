<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lm.dao.StaffMapper" >
  <resultMap id="BaseResultMap" type="com.lm.model.Staff" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_pass" property="loginPass" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="sfz" property="sfz" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="enter_time" property="enterTime" jdbcType="TIMESTAMP" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="ps" property="ps" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_name, login_pass, name, email, phone, sfz, type, enter_time, age, sex, 
    ps, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="all" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from staff
  </select>
  <select id="login" resultMap="BaseResultMap" parameterType="com.lm.model.Staff" >
    select 
    <include refid="Base_Column_List" />
    from staff
    where login_name = #{loginName,jdbcType=VARCHAR} 
    and login_pass = #{loginPass,jdbcType=VARCHAR}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lm.model.Staff" >
    insert into staff (id, login_name, login_pass, 
      name, email, phone, 
      sfz, type, enter_time, 
      age, sex, ps, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{loginPass,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{sfz,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{enterTime,jdbcType=TIMESTAMP}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{ps,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lm.model.Staff" >
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPass != null" >
        login_pass,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="sfz != null" >
        sfz,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="enterTime != null" >
        enter_time,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="ps != null" >
        ps,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null" >
        #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sfz != null" >
        #{sfz,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="enterTime != null" >
        #{enterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        #{ps,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lm.model.Staff" >
    update staff
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPass != null" >
        login_pass = #{loginPass,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sfz != null" >
        sfz = #{sfz,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="enterTime != null" >
        enter_time = #{enterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        ps = #{ps,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lm.model.Staff" >
    update staff
    set login_name = #{loginName,jdbcType=VARCHAR},
      login_pass = #{loginPass,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sfz = #{sfz,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      enter_time = #{enterTime,jdbcType=TIMESTAMP},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      ps = #{ps,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>