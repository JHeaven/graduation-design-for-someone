<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lm.dao.ReserveMapper" >
  <resultMap id="BaseResultMap" type="com.lm.model.Reserve" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="table_id" property="tableId" jdbcType="INTEGER" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="from_time" property="fromTime" jdbcType="TIMESTAMP" />
    <result column="to_time" property="toTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="ps" property="ps" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, table_id, table_name, from_time, to_time, name, phone, content, ps, status, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reserve
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <select id="all" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from reserve
  </select>
  
  
  
  <select id="selectTime" resultMap="BaseResultMap" parameterType="com.lm.model.Reserve" >
    select 
    <include refid="Base_Column_List" />
    from reserve
    where id not in (
    select 
    id
	FROM
	reserve
	WHERE
	<![CDATA[ 
		unix_timestamp(`reserve`.from_time) >= unix_timestamp(#{toTime,jdbcType=TIMESTAMP})  
	    or unix_timestamp(`reserve`.to_time) <=  unix_timestamp(#{fromTime,jdbcType=TIMESTAMP}) 
    ]]>
    
    )
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reserve
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lm.model.Reserve" >
    insert into reserve (id, table_id, table_name, 
      from_time, to_time, name, 
      phone, content, ps, 
      status, deleted)
    values (#{id,jdbcType=INTEGER}, #{tableId,jdbcType=INTEGER}, #{tableName,jdbcType=VARCHAR}, 
      #{fromTime,jdbcType=TIMESTAMP}, #{toTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{ps,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lm.model.Reserve" >
    insert into reserve
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tableId != null" >
        table_id,
      </if>
      <if test="tableName != null" >
        table_name,
      </if>
      <if test="fromTime != null" >
        from_time,
      </if>
      <if test="toTime != null" >
        to_time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="ps != null" >
        ps,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tableId != null" >
        #{tableId,jdbcType=INTEGER},
      </if>
      <if test="tableName != null" >
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="fromTime != null" >
        #{fromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toTime != null" >
        #{toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        #{ps,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lm.model.Reserve" >
    update reserve
    <set >
      <if test="tableId != null" >
        table_id = #{tableId,jdbcType=INTEGER},
      </if>
      <if test="tableName != null" >
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="fromTime != null" >
        from_time = #{fromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toTime != null" >
        to_time = #{toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ps != null" >
        ps = #{ps,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lm.model.Reserve" >
    update reserve
    set table_id = #{tableId,jdbcType=INTEGER},
      table_name = #{tableName,jdbcType=VARCHAR},
      from_time = #{fromTime,jdbcType=TIMESTAMP},
      to_time = #{toTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      ps = #{ps,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>